====================================================================================
GENERAL COMMANDS
----------------
	$ git status
	$ git log
	$ git diff --color-words

-- configure git
	- get all settings
		$ git config --list --show-origin
	
	- configure git ID
		$ git config --global user.name "eduardkb"
		$ git config --global user.email eduardbuhali@gmail.com
	
	- configure default branch
		$ git config --global init.defaultbranch=main
-- create a new project
	- create project in git site
	- create folder on local and dir into it
	$ git init
	- add .gitignore file if needed
	$ git add .
	$ git commit -m "first commit"
	$ git branch -M main
	$ git remote add origin https://github.com/eduardkb/test.git
	$ git push -u origin main
	
-- setup secondary location
	- create folder on local and dir into it
	$ git init
	$ git remote add origin https://github.com/eduardkb/<REPO_NAME>.git
	$ git pull origin main
	
-- commit changed files
	$ git add .
	$ git commit -m "first commit"
	$ git push -u origin main	

-- download from repository
	$ git pull origin master

====================================================================================
CHECKOUT AND MERGE BRANCHES
---------------------

-- list branches
	$ git branch

-- change branch
	$ git checkout main
	
-- create new branch and change to it (-b)
	$ git checkout -b new_branch
	
-- merge with main branch
	- change files
	$ git commit -am "changes made. mergiing from new_branch"
	git checkout main
	git merge new_branch
	git push origin main
	
	
-- remove branch	
	git branch -d master

====================================================================================
ADVANCED
--------
-- commit all changes directly without staging
	- option -a (--All) commits all files
	- new added files will not be committed. 
	- they need to be added to git first with "git add .".
	$ commit -am "Commit all changes"
	
-- VIEW DIFFERENCE BETWEEN FILES
	- shows diff only for files in working area
	$ git diff 			
	- shows diff only on staged area
	$ git diff --staged	
	- show in color only words that changed
	$ git diff --color-words  
	
-- VIEW ALL COMMIT LOGS	
	$ git log
	- shows only the last 5 updates
	$ git log -n 5 				
	- shows logs only since the date
	$ git log --since=2020-01-01	
	- searchs for author (does not need to be full author name)
	$ git log --author="eduard"   
	- searches the commit section with grep (is case sensitive)
	$ git log --grep="Init" 		
	
	complex example
		git log --since=2019-03-01 --until=2019-03-31 --author="Karen" --grep="refactor"
		
-- FIX LAST COMMIT MESSAGE
	$ git commit --amend -m "an updated commit message"

-- RETURN TO A PREVIOUS COMMIT
	git revert --no-commit c427d591..HEAD
	git commit
====================================================================================
INITIALIZATION INSTRUCTIONS ON GIT
----------------------------------
	…or create a new repository on the command line
		git init
		git add README.md
		git commit -m "first commit"
		git branch -M main
		git remote add origin https://github.com/eduardkb/test.git
		git push -u origin main
	…or push an existing repository from the command line
		git remote add origin https://github.com/eduardkb/test.git
		git branch -M main
		git push -u origin main
		
github delete repo
	on repository
	settings icon on the icons bar
	on general - go to the end of the page
	delete this repo

====================================================================================
GitHub Configure SSH Certificate on Linux

	Generate key:
		# ssh-keygen -t rsa -b 4096 -C “your_email@domain.com”

	get the key
		# cat /home/<user>/.ssh/id_rsa.pub

	add ssh key to github 
		navigate in github to settings --> SSH and GPG keys
		New SSH key

	test key
		ssh -T git@github.com
		(first time write 'yes')

	git remote has to be added as:
		git remote add origin git@github.com:eduardkb/<project>.git

GitHub Configure SSH Certificate on Windows
	On powershell
			$ ssh-keygen -o -t rsa -C "eduardbuhali@gmail.com"
			on path hit enter to accept default .ssh folder
				ex: C:\Users\Eduard\.ssh
			type pass
	on folder .ssh open file *.pub and copy key to clipboard		
	put key on github -> settings -> ssh and gpg keys
	
	download repo and change branch
		$ git init
		$ git remote add origin git@github.com:eduardkb/01.01-Python_Basics.git
		$ git pull origin main
		$ git branch
		$ git checkout main
		$ git branch -d master
		$ git status
		
SSH Certificate problem in Windows
	temporarily disable ssh verifications
		$ git config --global http.sslVerify true

	fix ssh problem on windows
		$ git config --global http.sslbackend schannel